/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cs471a1;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class App {
    JLabel CurProcess = new JLabel("        ");
    public String getGreeting() {
        return "Hello World!";
    }

    public void example(){
        JFrame frame = new JFrame("My First GUI");
        JPanel buttonPane = new JPanel();
        //frame.setLayout(new BoxLayout(buttonPane, BoxLayout.LINE_AXIS));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1600,700);
        JButton button = new JButton("Press");//Sets up button
        button.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                test_code();
            }});
        JButton newButton = new JButton("test");
        newButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
                frame.revalidate();
            }
        });
        
        JButton button1 = new JButton("Button 1");
        JButton button2 = new JButton("Button 2");
        buttonPane.add(BorderLayout.NORTH, button1);
        buttonPane.add(BorderLayout.SOUTH, button2);
        //frame.add(button); // Adds Button to content pane ofbuttonPane
        buttonPane.add(button);
        buttonPane.add(Box.createHorizontalStrut(5));
        buttonPane.add(new JSeparator(SwingConstants.VERTICAL));
        buttonPane.add(Box.createHorizontalStrut(5));
        buttonPane.add(button1);
        buttonPane.add(button2);
        buttonPane.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
        frame.add(BorderLayout.NORTH, newButton);
        frame.add(BorderLayout.SOUTH, buttonPane);
        frame.setVisible(true);//Makes window visable
    }
    
    public void test_code(){
        //Creating the Frame
        JFrame frame = new JFrame("Chat Frame");
        frame.setSize(400, 400);

        //Creating the MenuBar and adding components
        JMenuBar mb = new JMenuBar();
        JMenu m1 = new JMenu("FILE");
        JMenu m2 = new JMenu("Help");
        mb.add(m1);
        mb.add(m2);
        JMenuItem m11 = new JMenuItem("Open");
        JMenuItem m22 = new JMenuItem("Save as");
        m1.add(m11);
        m1.add(m22);

        //Creating the panel at bottom and adding components
        JPanel panel = new JPanel(); // the panel is not visible in output
        JLabel label = new JLabel("Enter Text");
        JTextField tf = new JTextField(10); // accepts upto 10 characters
        JButton send = new JButton("Send");
        JButton reset = new JButton("Reset");
        panel.add(label); // Components Added using Flow Layout
        panel.add(tf);
        panel.add(send);
        panel.add(reset);

        // Text Area at the Center
        JTextArea ta = new JTextArea();

        //Adding Components to the frame.
        frame.getContentPane().add(BorderLayout.SOUTH, panel);//Tells frame where to put what
        frame.getContentPane().add(BorderLayout.NORTH, mb);
        frame.getContentPane().add(BorderLayout.CENTER, ta);
        frame.setVisible(true);
    }

    public boolean hasText(String word){
        for(int i=0;i<word.length();i++){
            if(word.charAt(i) != ' '){
                return true;
            }
        }
        return false;
    }
    public void OSGUI(){
        //Window Creation
        JFrame window = new JFrame("OSGUI");
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        window.setSize(1300,700);
        //Panel Creation
        JPanel PQ = new JPanel();
        JPanel CurrentProcess = new JPanel();
        JPanel NewProcess = new JPanel();
        JPanel BlockedList = new JPanel();
        //Panel Formating
        JButton test1 = new JButton("PQ");
        //Panel Current Process
        JLabel Process = new JLabel("Current Process: ");
        JButton Block = new JButton("Block");
        JButton Finish = new JButton("Complete");
        CurrentProcess.add(Process);
        CurrentProcess.add(CurProcess);
        CurrentProcess.add(Block);
        CurrentProcess.add(Finish);
        //Panel Blocked List
        JLabel BlockedLabel = new JLabel("Blocked List");
        BlockedList.add(BlockedLabel);
        BlockedList.add(new JSeparator(JSeparator.HORIZONTAL));
        //Panel Priority Queue
        JLabel pQLabel = new JLabel("Priorty Queue");
        PQ.add(pQLabel);
        //Panel NewProcess
        JLabel NewP = new JLabel("Process Name");
        JLabel Newtest = new JLabel("Nothing");
        JTextField ProcessField = new JTextField(30);
        JButton AddProcess = new JButton("Add Process");
        AddProcess.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
                String NewProcessName = ProcessField.getText();//Grabs what is in the field
                ProcessField.setText("");
                if(NewProcessName.length()>0&&hasText(NewProcessName)){
                    Newtest.setText(NewProcessName);
                }
            }
        });
        NewProcess.add(NewP);
        NewProcess.add(ProcessField);
        NewProcess.add(AddProcess);
        NewProcess.add(Newtest);
        //Window formating
        window.add(BorderLayout.NORTH, CurrentProcess);
        window.add(BorderLayout.SOUTH, NewProcess);
        window.add(BorderLayout.WEST, BlockedList);
        window.add(new JSeparator(JSeparator.VERTICAL), BorderLayout.CENTER);
        window.add(BorderLayout.CENTER, PQ);
        window.setVisible(true);
    }

    public static void main(String[] args) {
        App Prog = new App();
        Prog.OSGUI();
    }

}
